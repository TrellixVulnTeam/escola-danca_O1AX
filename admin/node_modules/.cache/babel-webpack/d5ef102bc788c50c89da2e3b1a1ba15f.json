{"ast":null,"code":"import { mergeMap } from 'rxjs/operators';\nimport { httpOptions, httpAll } from '../../_config/headers.service';\nimport { environment } from '../../../environments/environment.prod';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./token.service\";\nexport let SessionService = /*#__PURE__*/(() => {\n  class SessionService {\n    constructor(http, tokenSrv) {\n      this.http = http;\n      this.tokenSrv = tokenSrv;\n    }\n\n    getCookie() {\n      return this.http.get(`${environment.API}/sanctum/csrf-cookie`);\n    } //Login\n\n\n    login(data) {\n      return this.getCookie().pipe(mergeMap(res => {\n        console.log(res);\n        return this.http.post(`${environment.API}/api/auth/admin/login`, data);\n      }));\n    } //Meu Perfil\n\n\n    me() {\n      return this.http.get(`${environment.API}/api/admin/me`, httpAll);\n    } //Alterar dados de usuário\n\n\n    editarPerfil(data) {\n      let id = this.tokenSrv.getUser().id;\n      return this.http.put(`${environment.API}/api/admin/editar-perfil/${id}`, data, httpOptions);\n    } //Alterar Senha\n\n\n    alterarSenha(data) {\n      return this.http.put(`${environment.API}/api/admin/alterar-senha`, data, httpOptions);\n    }\n\n    logout() {\n      return this.http.post(`${environment.API}/api/auth/admin/logout`, '', httpAll);\n    }\n\n  }\n\n  SessionService.ɵfac = function SessionService_Factory(t) {\n    return new (t || SessionService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.TokenService));\n  };\n\n  SessionService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: SessionService,\n    factory: SessionService.ɵfac,\n    providedIn: 'root'\n  });\n  return SessionService;\n})();","map":null,"metadata":{},"sourceType":"module"}