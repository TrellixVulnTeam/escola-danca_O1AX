{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nexport let TokenService = /*#__PURE__*/(() => {\n  class TokenService {\n    constructor() {\n      this.iss = {\n        login: environment.API_LOGIN\n      };\n    } //Pega o token\n\n\n    handle(data) {\n      this.setToken(data.token);\n      this.setUser(data.admin);\n    } //Salva o token no storage\n\n\n    setToken(token) {\n      localStorage.setItem('@Auth:token', token);\n    } //Salva o user no storage\n\n\n    setUser(admin) {\n      //Adicionar apenas os dados que queremos no storage\n      let add = {\n        id: admin.id,\n        name: admin.name,\n        email: admin.email\n      };\n      localStorage.setItem('@Auth:user', JSON.stringify(add));\n    } //Retorna o valor do token\n\n\n    get() {\n      return localStorage.getItem('@Auth:token');\n    } //Retorna os dados do usuário com objeto\n\n\n    getUser() {\n      let userString = localStorage.getItem('@Auth:user');\n\n      if (userString) {\n        let userObj = JSON.parse(userString);\n        return userObj;\n      }\n    } //Boolean de se existe Token no Storage\n\n\n    getToken() {\n      if (localStorage.getItem('@Auth:token')) {\n        return true;\n      }\n\n      return false;\n    } //Ao sair, remove todos os tokens salvos\n\n\n    remove() {\n      localStorage.removeItem('@Auth:token');\n      localStorage.removeItem('@Auth:user');\n    }\n\n    loggedIn() {\n      return this.getToken();\n    }\n\n  }\n\n  TokenService.ɵfac = function TokenService_Factory(t) {\n    return new (t || TokenService)();\n  };\n\n  TokenService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TokenService,\n    factory: TokenService.ɵfac,\n    providedIn: 'root'\n  });\n  return TokenService;\n})();","map":null,"metadata":{},"sourceType":"module"}